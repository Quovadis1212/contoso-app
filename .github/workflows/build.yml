name: Build, Test and Push Contoso-App

on:
  push:
    branches: ["main", "dev"]

jobs:
  build:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    steps:
      # --- 1. Checkout ---
      - name: Checkout Repository
        uses: actions/checkout@v4

      # --- 2. Node.js Setup ---
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      # --- 3. Dependencies installieren ---
      - name: Install dependencies
        run: npm ci

      # --- 4. Commit-Hash setzen ---
      - name: Set Commit SHA
        run: echo "COMMIT_SHA=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      # --- 5. Login zu GHCR ---
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # --- 6. Build & Push Docker-Image ---
      - name: Build and Push Docker Image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: |
            ghcr.io/quovadis1212/contoso-app:${{ github.sha }}
            ghcr.io/quovadis1212/contoso-app:latest

      # --- 7. Smoke Test (lokal) ---
      - name: Smoke Test
        run: |
          npm start &
          for i in {1..10}; do
            nc -z localhost 3000 && break
            echo "⏳ Waiting for app to start..."
            sleep 1
          done
          npm test
          pkill -f "node server.js" || true

      # --- 8. Container-Test ---
      - name: E2E Test (Docker Image)
        run: |
          docker run -d -p 3001:3000 ghcr.io/quovadis1212/contoso-app:${{ github.sha }}
          echo "⏳ Waiting for container to start..."
          for i in {1..20}; do
            status=$(curl -s -o /dev/null -w "%{http_code}" http://localhost:3001/healthz || true)
            if [ "$status" = "200" ]; then
              echo "✅ Container responded with HTTP 200 after $i attempts"
              exit 0
            fi
            echo "⏳ Still waiting ($i/20)..."
            sleep 1
          done
          echo "❌ Container did not respond in time"
          docker logs $(docker ps -q)
          exit 1



